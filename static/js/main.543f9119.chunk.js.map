{"version":3,"sources":["components/control-panel/control-panel.js","components/heading/heading.js","components/info/info.js","components/item-add-form/item-add-form.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/app/app.js","index.js"],"names":["ControlPanel","state","term","activeButton","classes","all","active","done","handleChange","event","target","value","setState","props","onSearch","handleClick","onFilterApply","Object","keys","forEach","key","className","onChange","this","type","placeholder","role","onClick","Component","Heading","Info","todo","ItemAddForm","label","handleSubmit","preventDefault","onItemAdded","onSubmit","required","style","whiteSpace","TodoListItem","onDeleted","onToggleDone","onToggleImportant","important","TodoList","todos","map","id","App","maxId","search","items","filter","item","toLowerCase","indexOf","filterByStatus","status","saveToLocalStorage","data","localStorage","setItem","JSON","stringify","todoData","filterType","deleteItem","newData","addItem","toggleProperty","property","toggleImportant","toggleDone","handleSearch","applyFilter","parse","getItem","doneCount","length","todoCount","visibleItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,aAAc,O,EAGhBC,QAAU,CACRC,IAAK,eACLC,OAAQ,4BACRC,KAAM,6B,EAGRC,aAAe,SAACC,GACd,IAAMP,EAAOO,EAAMC,OAAOC,MAC1B,EAAKC,SAAS,CAAEV,SAChB,EAAKW,MAAMC,SAASZ,I,EAGtBa,YAAc,SAACZ,GACb,EAAKS,SAAS,CAAET,iBAChB,EAAKU,MAAMG,cAAcb,GACzBc,OAAOC,KAAK,EAAKd,SAASe,SAAQ,SAACC,GACjC,EAAKhB,QAAQgB,GAAO,+BAEtB,EAAKhB,QAAQD,GAAgB,gB,4CAG/B,WAAU,IAAD,OACP,OACE,sBAAKkB,UAAU,cAAf,UACE,uBACEC,SAAUC,KAAKf,aACfa,UAAU,oBACVG,KAAK,OACLC,YAAY,SACZd,MAAOY,KAAKtB,MAAMC,OAEpB,sBAAKmB,UAAU,YAAYK,KAAK,QAAhC,UACE,wBACEC,QAAS,kBAAM,EAAKZ,YAAY,QAChCS,KAAK,SACLH,UAAWE,KAAKnB,QAAQC,IAH1B,iBAOA,wBACEsB,QAAS,kBAAM,EAAKZ,YAAY,WAChCS,KAAK,SACLH,UAAWE,KAAKnB,QAAQE,OAH1B,oBAOA,wBACEqB,QAAS,kBAAM,EAAKZ,YAAY,SAChCS,KAAK,SACLH,UAAWE,KAAKnB,QAAQG,KAH1B,4B,GApDgCqB,aCA3BC,EAFC,kBAAM,4CCQPC,EARF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMxB,EAAW,EAAXA,KACpB,OACE,sBAAKc,UAAU,gCAAf,UACGU,EADH,gBACsBxB,EADtB,YCAiByB,E,4MACnB/B,MAAQ,CACNgC,MAAO,I,EAGTzB,aAAe,SAACC,GACd,EAAKG,SAAS,CAAEqB,MAAOxB,EAAMC,OAAOC,S,EAGtCuB,aAAe,SAACzB,GACdA,EAAM0B,iBACN,EAAKtB,MAAMuB,YAAY,EAAKnC,MAAMgC,OAClC,EAAKrB,SAAS,CAAEqB,MAAO,M,4CAGzB,WACE,OACE,uBAAMI,SAAUd,KAAKW,aAAcb,UAAU,4BAA7C,UACE,uBACEC,SAAUC,KAAKf,aACfiB,YAAY,wBACZD,KAAK,OACLH,UAAU,oBACVV,MAAOY,KAAKtB,MAAMgC,MAClBK,UAAQ,IAEV,wBAAQjB,UAAU,4BAA4BkB,MAAO,CAAEC,WAAY,UAAnE,6B,GA1BiCZ,aC6B1Ba,G,MA7BM,SAAC,GAA4E,IAA1ER,EAAyE,EAAzEA,MAAOS,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,kBAClDxC,EAAU,uBAOd,OAR+F,EAAtBG,OAGvEH,GAAW,SAHkF,EAAhByC,YAM7EzC,GAAW,cAGX,uBAAMiB,UAAU,iBAAhB,UACE,sBAAMA,UAAWjB,EAASuB,QAASgB,EAAnC,SACGV,IAEH,uBAAMZ,UAAU,eAAhB,UACE,wBAAQM,QAASe,EAAWlB,KAAK,SAASH,UAAU,qCAApD,SACE,mBAAGA,UAAU,uBAEf,wBACEM,QAASiB,EACTpB,KAAK,SACLH,UAAU,sCAHZ,SAKE,mBAAGA,UAAU,iCCHRyB,EAnBE,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOL,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAClD,OACE,oBAAIvB,UAAU,uBAAd,SACG0B,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,MAAOY,EAAd,EAAcA,UAAWtC,EAAzB,EAAyBA,KAAzB,OACT,oBAAIc,UAAU,kBAAd,SACE,cAAC,EAAD,CACEY,MAAOA,EACPY,UAAWA,EACXtC,KAAMA,EACNmC,UAAW,kBAAMA,EAAUO,IAC3BN,aAAc,kBAAMA,EAAaM,IACjCL,kBAAmB,kBAAMA,EAAkBK,OAPVA,SCCxBC,E,4MACnBC,MAAQ,I,EAERC,OAAS,SAACC,EAAOnD,GACf,OAAOmD,EAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKtB,MAAMuB,cAAcC,QAAQvD,IAAS,M,EAG1EwD,eAAiB,SAACL,EAAOM,GACvB,OAAQA,GACN,IAAK,SACH,OAAON,EAAMC,QAAO,SAACC,GAAD,OAAWA,EAAKhD,QACtC,IAAK,OACH,OAAO8C,EAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKhD,QACrC,QACE,OAAO8C,I,EAIbO,mBAAqB,SAACC,GACpBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,K,EAGlD5D,MAAQ,CACNiE,SAAU,GACVhE,KAAM,GACNiE,WAAY,O,EASdC,WAAa,SAACnB,GACZ,IAAMoB,EAAU,EAAKpE,MAAMiE,SAASZ,QAAO,SAACC,GAAD,OAAUA,EAAKN,KAAOA,KACjE,EAAKrC,UAAS,iBAAO,CAAEsD,SAAUG,MACjC,EAAKT,mBAAmBS,I,EAG1BC,QAAU,SAACrC,GACT,IAAMoC,EAAO,sBACR,EAAKpE,MAAMiE,UADH,CAEX,CACEjB,GAAI,EAAKE,QACTlB,QACAY,WAAW,EACXtC,MAAM,KAGV,EAAKK,UAAS,iBAAO,CAAEsD,SAAUG,MACjC,EAAKT,mBAAmBS,I,EAG1BE,eAAiB,SAACtB,EAAIuB,GACpB,IAAMH,EAAU,EAAKpE,MAAMiE,SAASlB,KAAI,SAACO,GAAD,OACtCA,EAAKN,KAAOA,EAAZ,2BAAsBM,GAAtB,kBAA6BiB,GAAYjB,EAAKiB,KAAcjB,KAE9D,EAAK3C,UAAS,iBAAO,CAAEsD,SAAUG,MACjC,EAAKT,mBAAmBS,I,EAG1BI,gBAAkB,SAACxB,GACjB,EAAKsB,eAAetB,EAAI,c,EAG1ByB,WAAa,SAACzB,GACZ,EAAKsB,eAAetB,EAAI,S,EAG1B0B,aAAe,SAACzE,GACd,EAAKU,SAAS,CAAEV,U,EAGlB0E,YAAc,SAACT,GACb,EAAKvD,SAAS,CAAEuD,gB,uDA/ClB,WACE5C,KAAKX,SAAS,CACZsD,SAAUF,KAAKa,MAAMf,aAAagB,QAAQ,aAAe,U,oBAgD7D,WAAU,IAAD,EACgCvD,KAAKtB,MAApCiE,EADD,EACCA,SAAUhE,EADX,EACWA,KAAMiE,EADjB,EACiBA,WAClBY,EAAYb,EAASZ,QAAO,SAACC,GAAD,OAAUA,EAAKhD,QAAMyE,OACjDC,EAAYf,EAASc,OAASD,EAC9BG,EAAe3D,KAAKmC,eAAenC,KAAK6B,OAAOc,EAAUhE,GAAOiE,GAEtE,OACE,qBAAK9C,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMU,KAAMkD,EAAW1E,KAAMwE,IAC7B,cAAC,EAAD,CAAcjE,SAAUS,KAAKoD,aAAc3D,cAAeO,KAAKqD,cAC/D,cAAC,EAAD,CACElC,UAAWnB,KAAK6C,WAChBzB,aAAcpB,KAAKmD,WACnB9B,kBAAmBrB,KAAKkD,gBACxB1B,MAAOmC,IAET,cAAC,EAAD,CAAa9C,YAAab,KAAK+C,mB,GAhGR1C,aCHjCuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.543f9119.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport default class ControlPanel extends Component {\n  state = {\n    term: '',\n    activeButton: 'all',\n  };\n\n  classes = {\n    all: 'btn btn-info',\n    active: 'btn btn-outline-secondary',\n    done: 'btn btn-outline-secondary',\n  };\n\n  handleChange = (event) => {\n    const term = event.target.value;\n    this.setState({ term });\n    this.props.onSearch(term);\n  };\n\n  handleClick = (activeButton) => {\n    this.setState({ activeButton });\n    this.props.onFilterApply(activeButton);\n    Object.keys(this.classes).forEach((key) => {\n      this.classes[key] = 'btn btn-outline-secondary';\n    });\n    this.classes[activeButton] = 'btn btn-info';\n  };\n\n  render() {\n    return (\n      <div className='d-flex mb-3'>\n        <input\n          onChange={this.handleChange}\n          className='form-control mr-3'\n          type='text'\n          placeholder='Search'\n          value={this.state.term}\n        />\n        <div className='btn-group' role='group'>\n          <button\n            onClick={() => this.handleClick('all')}\n            type='button'\n            className={this.classes.all}\n          >\n            All\n          </button>\n          <button\n            onClick={() => this.handleClick('active')}\n            type='button'\n            className={this.classes.active}\n          >\n            Active\n          </button>\n          <button\n            onClick={() => this.handleClick('done')}\n            type='button'\n            className={this.classes.done}\n          >\n            Done\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","const Heading = () => <h1>Todo List</h1>;\n\nexport default Heading;\n","const Info = ({ todo, done }) => {\n  return (\n    <div className='text-right text-secondary m-2'>\n      {todo} more to do, {done} done\n    </div>\n  );\n};\n\nexport default Info;\n","import { Component } from 'react';\n\nexport default class ItemAddForm extends Component {\n  state = {\n    label: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({ label: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({ label: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className='item-add-form d-flex mt-3'>\n        <input\n          onChange={this.handleChange}\n          placeholder='What needs to be done'\n          type='text'\n          className='form-control mr-2'\n          value={this.state.label}\n          required\n        />\n        <button className='btn btn-outline-secondary' style={{ whiteSpace: 'nowrap' }}>\n          Add item\n        </button>\n      </form>\n    );\n  }\n}\n","import './todo-list-item.scss';\n\nconst TodoListItem = ({ label, onDeleted, onToggleDone, onToggleImportant, done, important }) => {\n  let classes = 'todo-list-item-label';\n  if (done) {\n    classes += ' done';\n  }\n  if (important) {\n    classes += ' important';\n  }\n  return (\n    <span className='todo-list-item'>\n      <span className={classes} onClick={onToggleDone}>\n        {label}\n      </span>\n      <span className='item-control'>\n        <button onClick={onDeleted} type='button' className='btn btn-outline-danger btn-control'>\n          <i className='far fa-trash-alt'></i>\n        </button>\n        <button\n          onClick={onToggleImportant}\n          type='button'\n          className='btn btn-outline-success btn-control'\n        >\n          <i className='fas fa-exclamation'></i>\n        </button>\n      </span>\n    </span>\n  );\n};\n\nexport default TodoListItem;\n","import TodoListItem from '../todo-list-item/todo-list-item';\n\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\n  return (\n    <ul className='list-group todo-list'>\n      {todos.map(({ id, label, important, done }) => (\n        <li className='list-group-item' key={id}>\n          <TodoListItem\n            label={label}\n            important={important}\n            done={done}\n            onDeleted={() => onDeleted(id)}\n            onToggleDone={() => onToggleDone(id)}\n            onToggleImportant={() => onToggleImportant(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import { Component } from 'react';\nimport ControlPanel from '../control-panel/control-panel';\nimport Heading from '../heading/heading';\nimport Info from '../info/info';\nimport ItemAddForm from '../item-add-form/item-add-form';\nimport TodoList from '../todo-list/todo-list';\n\nexport default class App extends Component {\n  maxId = 100;\n\n  search = (items, term) => {\n    return items.filter((item) => item.label.toLowerCase().indexOf(term) > -1);\n  };\n\n  filterByStatus = (items, status) => {\n    switch (status) {\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  };\n\n  saveToLocalStorage = (data) => {\n    localStorage.setItem('todoData', JSON.stringify(data));\n  };\n\n  state = {\n    todoData: [],\n    term: '',\n    filterType: 'all',\n  };\n\n  componentDidMount() {\n    this.setState({\n      todoData: JSON.parse(localStorage.getItem('todoData') || '[]'),\n    });\n  }\n\n  deleteItem = (id) => {\n    const newData = this.state.todoData.filter((item) => item.id !== id);\n    this.setState(() => ({ todoData: newData }));\n    this.saveToLocalStorage(newData);\n  };\n\n  addItem = (label) => {\n    const newData = [\n      ...this.state.todoData,\n      {\n        id: this.maxId++,\n        label,\n        important: false,\n        done: false,\n      },\n    ];\n    this.setState(() => ({ todoData: newData }));\n    this.saveToLocalStorage(newData);\n  };\n\n  toggleProperty = (id, property) => {\n    const newData = this.state.todoData.map((item) =>\n      item.id === id ? { ...item, [property]: !item[property] } : item\n    );\n    this.setState(() => ({ todoData: newData }));\n    this.saveToLocalStorage(newData);\n  };\n\n  toggleImportant = (id) => {\n    this.toggleProperty(id, 'important');\n  };\n\n  toggleDone = (id) => {\n    this.toggleProperty(id, 'done');\n  };\n\n  handleSearch = (term) => {\n    this.setState({ term });\n  };\n\n  applyFilter = (filterType) => {\n    this.setState({ filterType });\n  };\n\n  render() {\n    const { todoData, term, filterType } = this.state;\n    const doneCount = todoData.filter((item) => item.done).length;\n    const todoCount = todoData.length - doneCount;\n    const visibleItems = this.filterByStatus(this.search(todoData, term), filterType);\n\n    return (\n      <div className='pt-5 pb-3'>\n        <div className='container'>\n          <Heading />\n          <Info todo={todoCount} done={doneCount} />\n          <ControlPanel onSearch={this.handleSearch} onFilterApply={this.applyFilter} />\n          <TodoList\n            onDeleted={this.deleteItem}\n            onToggleDone={this.toggleDone}\n            onToggleImportant={this.toggleImportant}\n            todos={visibleItems}\n          />\n          <ItemAddForm onItemAdded={this.addItem} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}